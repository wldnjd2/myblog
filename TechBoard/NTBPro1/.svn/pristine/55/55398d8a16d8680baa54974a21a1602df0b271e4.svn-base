
	var cate = '';

	/* 게시글 하단 페이징 처리 */
	function pageMove(pageSize, cp, flag){
		
		
		
		/* 페이징에 필요한 변수 */
		/* 현재 페이지 */
		var currentPage = cp; 
		/* 한번에 게시될 페이지 리스트 */
		var size = pageSize;
		/* 총 페이지 갯수*/
		var tp = Math.ceil($("#totalPage").val());
		/* 현재 페이지 리스트의 마지막 페이지 번호 */
		var ep = Math.ceil(currentPage/size)*10;
		/* 현재 페이지 리스트의 첫 페이지 번호 */
		var sp = (ep-size)+1;
		/* 현재 카테고리 명*/
		var cat_cname = $("#category_name").val();
		/* 기존 동기방식으로 구현했던 하단 페이징 부분 데이터를 지움*/
		$("#pagination").empty();

		/* 다음 페이지 버튼 클릭시 */
		if (flag == 'next'){
		/* 비동기방식으로 처리한 하단 페이징 부분 html코드를 담을 변수 */
		var str = '';
		/* '다음'버튼을 클릭했기 때문에 시작번호와 끝번호를 증가시켜준다.*/
		sp += size; // 11
		ep = sp+(size-1); // 20
		/* sp를 현재페이지로 지정 */
		currentPage = sp;
				/* 끝페이지가 총 페이지보다 작다면 */
				if(ep < tp){
					
					/* 시작페이지가 1이라면 '이전'버튼 안보이게*/
					if(sp == 1){
						
						for(var i = sp; i <= ep; i++){
							str += '<a class="paging" href="javascript:void(0)" onclick="javascript:pagination('+i+', \''+cat_cname+'\');">'+i+'</a>'
						}
						str += '<a href="javascript:void(0)" onclick="javascript:pageMove('+size+', '+currentPage+', \'next\' )">다음</a>'
						
					}else{
						str += '<a href="javascript:void(0)" onclick="javascript:pageMove('+size+', '+currentPage+', \'pre\')">이전</a>'
						for(var i = sp; i <= ep; i++){
							str += '<a class="paging" href="javascript:void(0)" onclick="javascript:pagination('+i+', \''+cat_cname+'\');">'+i+'</a>'
						}
						str += '<a href="javascript:void(0)" onclick="javascript:pageMove('+size+', '+currentPage+', \'next\')">다음</a>'
						
					}
				/* 그 외의 경우, 끝페이지가 총페이지보다 크거나 같을 때 */
				}else{
					/* 끝페이지번호를 총페이지로 번호로 설정  */
					ep = tp;
					for(var i = sp; i <= ep; i++){
						str += '<a class="paging" href="javascript:void(0)" onclick="javascript:pagination('+i+', \''+cat_cname+'\');">'+i+'</a>'
					}
					str = '<a href="javascript:void(0)" onclick="javascript:pageMove('+size+', '+currentPage+', \'pre\')">이전</a>'+str;
				}
		/* 이전 페이지 */
		}else if (flag == 'pre'){
			/* 비동기방식으로 처리한 하단 페이징 부분 html코드를 담을 변수 */
			var str = '';
			/* 이전 버튼을 클릭했기 때문에 시작번호, 끝번호를 감소시켜준다*/
			sp -= size;
			ep = sp+(size-1);;
			/* 현재 끝페이지를 현재페이지로 지정 */
			currentPage = ep;
				/* 시작페이지가 1이라면 이전버튼 안보이게*/
				if(sp == 1){
					for(var i = sp; i <= ep; i++){
						str += '<a class="paging" href="javascript:void(0)" onclick="javascript:pagination('+i+', \''+cat_cname+'\');">'+i+'</a>'
					}
					str += '<a href="javascript:void(0)" onclick="javascript:pageMove('+size+', '+currentPage+', \'next\')">다음</a>'
				}else{
					str += '<a href="javascript:void(0)" onclick="javascript:pageMove('+size+', '+currentPage+', \'pre\')">이전</a>'
					for(var i = sp; i <= ep; i++){
						str += '<a class="paging" href="javascript:void(0)" onclick="javascript:pagination('+i+', \''+cat_cname+'\');">'+i+'</a>'
					}
					str += '<a href="javascript:void(0)" onclick="javascript:pageMove('+size+', '+currentPage+', \'next\')">다음</a>'
				}
			}
			$("#pagination").html(str);
			
			
			/* 다음 버튼을 누르면 다음 페이지의 데이터를 불러와야 함*/
			if(cate == ''){
				pagination(currentPage);
			}else if(cate != ''){
				pagination(currentPage, cate);
			}
	}
	
	/* 페이지 이동하면 데이터를 비동기 방식으로 불러오는 함수 */
	function pagination(cp, category){
		/* 페이지 넘길 때 배열 초기화 */
		listValue = [];
	
		$.ajax({
			url: './main.do',
			type : 'POST',
			data: { 'currentPage' : cp, 'cat_cname' : category },
			dataType: 'json',
			success:function(data){
				/* 기존의 동기방식으로 불러온 테이블의 데이터들을 비운다.*/
				$(".tr-sync").empty();
				var arr = [];
				
				/* 비동기방식으로 불러온 데이터가 남아있는 경우가 있어 비동기로 불러온 데이터도 비워준다. */
				$(".tr-async").empty();
				
				
				for(var i = 0; i < data.resultList.length; i++){
					arr[i] = '<td>'+data.resultList[i].post_pnum+'</td>'
							+'<td>'+data.resultList[i].cat_cname+'</td>'
							+'<td class="td-title" onclick="moveToDetail('+data.resultList[i].post_pnum+');">'+data.resultList[i].post_title+'</td>'
							+'<td>'+data.resultList[i].user_id+'</td>'
							+'<td>'+data.resultList[i].post_regdate+'</td>'
							+'<td>'+data.resultList[i].post_hits+'</td>'
							if($("#rank").val() == 1){
								arr[i] += '<td><input type="checkbox" id="list-chk'+data.resultList[i].post_pnum+'" name="post_pnum" value="'+data.resultList[i].post_pnum+'"  onclick="javascript:listCheck('+data.resultList[i].post_pnum+')" /></td>'
							}		
				/* 비동기방식으로 불러온 데이터들로 테이블의 행들을 채운다 */
					$("#tr-async"+(i+1)+"").html(arr[i])
	
				}
				
			},
			error:function(data){
				alert("데이터를 불러오는 중 오류가 발생했습니다.")
			}
			
		})
		
	}
	
	/* 카테고리 버튼 클릭했을 때 카테고리별 게시글 분류 */
	function category_pagination(currentPage, categoryName){
		$.ajax({
			url : './main.do',
			type : 'POST',
			data: { 'currentPage' : currentPage, 'cat_cname' : categoryName },
			dataType: 'json',
			success:function(data){
				
				/* 페이징에 필요한 변수 */
				/* 현재 페이지 */
				var cp = currentPage; 
				/* 한번에 게시될 페이지 리스트 */
				var size = data.paginationInfo.pageSize;
				/* 현재 페이지 리스트의 마지막 페이지 번호 */
				var ep = Math.ceil(currentPage/size)*10;
				/* 현재 페이지 리스트의 첫 페이지 번호 */
				var sp = (ep-size)+1;
				
				$("#category_name").val(categoryName)
				$("#totalPage").val(Math.ceil(data.resultCnt/data.paginationInfo.recordCountPerPage));
				/* 카테고리를 클릭했을 경우*/
				if(categoryName != ''){
					
					/* 카테고리명, 총 페이지 수 hidden 속성에 값 지정*/
					var str = '';
					/*var cat_cname = data.boardVO.cat_cname;*/
					var tp = Math.ceil(data.resultCnt/data.paginationInfo.recordCountPerPage);
					
					/* 끝페이지가 총 페이지보다 작다면 */
					if(ep < tp){
						for(var i = sp; i <= ep; i++){
							str += '<a class="paging" href="javascript:void(0)" onclick="javascript:pagination('+i+', \''+categoryName+'\');">'+i+'</a>'
						}
						str += '<a href="javascript:void(0)" onclick="javascript:pageMove('+size+', '+cp+', \'next\')">다음</a>'
					/* 그 외의 경우, 끝페이지가 총페이지보다 크거나 같을 때  */
					}else{
						ep = tp
						for(var i = sp; i <= ep; i++){
							str += '<a class="paging" href="javascript:void(0)" onclick="javascript:pagination('+i+', \''+categoryName+'\');">'+i+'</a>'
						}
					}
					cate = categoryName
					pagination(1, categoryName)
				/* '전체' 버튼을 클릭했을 경우 */
				}else{
					var str = '';
					for(var i = sp; i <= ep; i++){
						str += '<a class="paging" href="javascript:void(0)" onclick="javascript:pagination('+i+', \''+categoryName+'\');">'+i+'</a>'
					}
					str += '<a href="javascript:void(0)" onclick="javascript:pageMove('+data.paginationInfo.pageSize+', '+data.boardVO.currentPage+', \'next\')">다음</a>'
					cate = categoryName
					pagination(1, categoryName)
				}
				$("#pagination").html(str);
			}
		})
	}
	
	function closeModal() {
		$('#modal_back').hide();
	};
	
	//회원관련 js시작
	$(function(){
	
		//로그인 버튼
		$("#login_btn").click(function(){
			$(location).attr("href", "/NTBPro1/login/logIn.do");
		});
		
		//로그아웃 버튼
		$("#logout_btn").click(function(){
			$(location).attr("href", "/NTBPro1/login/logOut.do")
		});
		
		//정보수정 버튼
		$("#update_btn").click(function(){

			$("#modal_back").css("display","block");
			
		});
		
		/* 회원 정보 수정 */
		$("#updateUser_btn").click(function(){
			
			var user_pw1 = $.trim($("#user_pw").val());
			var user_email = $.trim($("#user_email").val());
			// 이메일 정규식
			var regularExpression = /^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i;
			
			var user_pnum = $.trim($("#user_pnum").val());
     		// 휴대폰 번호 정규식
     		var regPhone = /^\d{3}-\d{3,4}-\d{4}$/;
			
     		if(user_pw1 == ""){
     			alert("비밀번호를 입력해주세요.");
     			$("#user_pw1").focus();
     			return false;
     		}else if(user_email != ""){
     			if(regularExpression.test(user_email) == false){
         			alert("이메일 형식을 한번 확인해주세요.");
         			$("#user_email").focus();
         			return false;
     			}else if(user_pnum != ""){
     				if(regPhone.test(user_pnum) == false){
             			alert("휴대폰 형식을 한번 확인해주세요.");
             			$("#user_pnum").focus();
             			return false;
     				}
     			}
 			}	
			
     				
			var inputFile = $("input[name='uploadFile']");
			var files = inputFile[0].files;
			
			var form = $("#frm_update")[0];
			var formData = new FormData(form);
			
			$.ajax({
				type: "POST",
				data: formData,	// json(전송) 타입
				url: "/NTBPro1/account/updateUserWrite.do",
				contentType : false,
		        processData : false,
		        cache : false,
				
				success: function(result){
					if(result == "ok"){
						alert("회원정보 수정이 완료되었습니다.");
						$("#modal_back").css("display", "none")
						$("#user_pw").val("");
					} else{
						alert("회원정보 수정이 실패하였습니다.비밀번호를 한번 확인해주세요.");
					}
				},
				error: function(){	//장애 발생
					alert("오류발생");
				}
			});
		});
	});
	
	/* 게시글 클릭 시 상세정보로 이동 */
	function moveToDetail(){
		console.log("test")
	}
	
	/* 관리자 버튼 */
	function moveToAdmin(){
		$(".modal").css("display", "flex");
		pagination_admin(1);
	}
	
	//썸네일
	document.addEventListener('DOMContentLoaded', function(){
		
	    //이미지 객체 타입으로 이미지 확장자 밸리데이션
	    var validateType = function(img){
	        return (['image/jpeg','image/jpg','image/png'].indexOf(img.type) > -1);
	    }
	
	    var validateName = function(fname){
	        let extensions = ['jpeg','jpg','png'];
	        let fparts = fname.split('.');
	        let fext = '';
	    
	        if(fparts.length > 1){
	            fext = fparts[fparts.length-1];
	        }
	    
	        let validated = false;
	        
	        if(fext != ''){
	            extensions.forEach(function(ext){
	                if(ext == fext){
	                }
	            });
	        }
	    
	        return validated;
	    }
	
	    // 파일 선택 필드에 이벤트 리스너 등록
	    document.getElementById('uploadFile').addEventListener('change', function(e){
	        let elem = e.target;
	        if(validateType(elem.files[0])){
	            let preview = document.querySelector('.thumb');
	            preview.src = URL.createObjectURL(elem.files[0]); //파일 객체에서 이미지 데이터 가져옴.
	            document.querySelector('.dellink').style.display = 'block'; // 이미지 삭제 링크 표시
	            preview.onload = function() {
	                URL.revokeObjectURL(preview.src); //URL 객체 해제
	            }
	        }else{
	        console.log('이미지 파일이 아닙니다.');
	        }
	    });
	
	    document.querySelector('.dellink').addEventListener('click', function(e){
	        let dellink = e.target;
	        let preview = dellink.previousElementSibling;
			var uploadFile = document.getElementById("uploadFile");
			var user_img = document.getElementById("user_img");
			uploadFile.value = '';
	        user_img.value = '';
	        preview.src = "../NTBPro1/images/라이언 사진.png"; // 썸네일 이미지 src 데이터 해제
	        
	    });
	});
	